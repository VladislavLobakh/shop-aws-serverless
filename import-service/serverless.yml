service: import-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1
  profile: vladislavlobakh
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    importProductsBucketName: water-shop-import-files
    catalogItemsQueueUrl: !ImportValue CatalogItemsQueueUrl
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:GetObject'
        - 's3:PutObject'
        - 's3:DeleteObject'
      Resource:
        - 'arn:aws:s3:::${self:provider.environment.importProductsBucketName}/uploaded/*'
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
      Resource:
        - 'arn:aws:s3:::${self:provider.environment.importProductsBucketName}/parsed/*'
    - Effect: 'Allow'
      Action:
        - 'sqs:SendMessage'
        - 'sqs:GetQueueUrl'
      Resource: !ImportValue CatalogItemsQueueArn

plugins:
  - serverless-webpack
  - serverless-offline

package:
  individually: true

custom:
  webpack:
    includeModules: true

functions:
  importProductsFile:
    handler: handlers/importProductsFile.importProductsFile
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handlers/importFileParser.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.importProductsBucketName}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
          existing: true
